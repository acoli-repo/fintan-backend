
###SPLITTER... ITERATOR
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX powla: <http://purl.org/powla/powla.owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX conll: <http://ufal.mff.cuni.cz/conll2009-st/task-description.html#>
PREFIX nif: <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#>
PREFIX paula: <https://github.com/korpling/paula-xml#> # annotation properties

select ?fnr ?last ?firstTok ?endTok
where {
    ?endTok powla:string ?sE .
  	FILTER(regex(?sE, "\\.|!|\\?")) .
    FILTER(xsd:integer(REPLACE(STR(?endTok),'.*#sTok','')) = ?last) .
	{
		select ?fnr ?firstTok (min(?lnr) as ?last)
		where {
		  
		  
		  ?firstTok powla:nextTerm* ?lastTok .
		  ?lastTok powla:string ?s2 .
		  
		  FILTER(NOT EXISTS{[] powla:nextTerm ?firstTok .})
		  FILTER(regex(?s2, "\\.|!|\\?"))
		  
		  BIND(xsd:integer(REPLACE(STR(?firstTok),'.*#sTok','')) AS ?fnr)
		  BIND(xsd:integer(REPLACE(STR(?lastTok),'.*#sTok','')) AS ?lnr)
		  
		}
		group by ?fnr ?firstTok
	}.
}
order by ?fnr   
       